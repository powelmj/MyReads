{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/MyReads/src/Search.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  books,\n  updateBookShelf,\n  onClose\n}) => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (query.length >= 3) {\n      const timer = setTimeout(() => {\n        BooksAPI.search(query, 20).then(results => {\n          if (results.error) {\n            setSearchResults([]);\n          } else {\n            const updatedResults = results.map(result => {\n              const bookOnShelf = books.find(b => b.id === result.id);\n              return bookOnShelf ? {\n                ...result,\n                shelf: bookOnShelf.shelf\n              } : {\n                ...result,\n                shelf: \"none\"\n              };\n            });\n            setSearchResults(updatedResults);\n          }\n        }).catch(() => setSearchResults([]));\n      }, 300);\n      return () => clearTimeout(timer);\n    } else {\n      setSearchResults([]);\n    }\n  }, [query, books]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-search\",\n        onClick: () => navigate(\"/\"),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: query,\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: searchResults.map(book => /*#__PURE__*/_jsxDEV(Book, {\n          book: book,\n          updateBookShelf: updateBookShelf\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"k4GMW5NvrpwpPdzyf+JcXmN4gw8=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nSearch.propTypes = {\n  books: PropTypes.array.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","useNavigate","PropTypes","BooksAPI","Book","jsxDEV","_jsxDEV","Search","books","updateBookShelf","onClose","_s","query","setQuery","searchResults","setSearchResults","navigate","length","timer","setTimeout","search","then","results","error","updatedResults","map","result","bookOnShelf","find","b","id","shelf","catch","clearTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","book","_c","propTypes","array","isRequired","func","$RefreshReg$"],"sources":["/home/matt/Documents/MyReads/src/Search.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\n\nconst Search=({books,updateBookShelf,onClose})=>{\n    const [query, setQuery] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const navigate = useNavigate(); \n\n    useEffect(() => {\n        if (query.length >= 3) {\n          const timer = setTimeout(() => {\n            BooksAPI.search(query, 20)\n              .then((results) => {\n                if (results.error) {\n                  setSearchResults([]);\n                } else {\n                  const updatedResults = results.map((result) => {\n                    const bookOnShelf = books.find((b) => b.id === result.id);\n                    return bookOnShelf ? { ...result, shelf: bookOnShelf.shelf } : { ...result, shelf: \"none\" };\n                  });\n                  setSearchResults(updatedResults);\n                }\n              })\n              .catch(() => setSearchResults([]));\n          }, 300);\n    \n          return () => clearTimeout(timer);\n        } else {\n          setSearchResults([]);\n        }\n      }, [query, books]);\n\n      return (\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <button className=\"close-search\" onClick={() => navigate(\"/\")}>\n              Close\n            </button>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            <ol className=\"books-grid\">\n              {searchResults.map((book) => (\n                <Book\n                  key={book.id}\n                  book={book}\n                  updateBookShelf={updateBookShelf}\n                />\n              ))}\n            </ol>\n          </div>\n        </div>\n      );\n    };\n    \n    Search.propTypes = {\n      books: PropTypes.array.isRequired,\n      updateBookShelf: PropTypes.func.isRequired,\n    };\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}